<local:CommonDataGridUserControl 
            x:Class="EasyJob_ProDG.UI.View.User_Controls.DataGridUpdates"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EasyJob_ProDG.UI.View.User_Controls"
             xmlns:ap="clr-namespace:EasyJob_ProDG.UI.View.AttachedProperties"
             xmlns:cc="clr-namespace:CustomControlLib;assembly=CustomControlLib"
             xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:EasyJob_ProDG.UI.Behaviors"
             xmlns:converters="clr-namespace:EasyJob_ProDG.UI.View.Converters" 
             xmlns:sort="clr-namespace:EasyJob_ProDG.UI.View.Sort"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
    Visibility="{Binding Visible}"
             >

    <local:CommonDataGridUserControl.Resources>
        <converters:BoolInversionConverter x:Key="BoolInversionConverter" />
        <sort:EmptyTextLastSortComparer x:Key="EmptyTextLastSorter" />
    </local:CommonDataGridUserControl.Resources>

    <DockPanel>
        <StackPanel DockPanel.Dock="Top">
            <cc:SearchBox Text="{Binding TextToFilter}"/>
        </StackPanel>

        <Grid DockPanel.Dock="Bottom"
                    HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition />
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="110"/>
            </Grid.ColumnDefinitions>
            <Label Name="lblSelectionStatus"
                   Content="Selected: "
                   HorizontalAlignment="Right"
                   />
            <TextBlock Text="{Binding StatusBarText, Mode=OneWay}"
                       HorizontalAlignment="Stretch"
                       TextAlignment="Left"
                       VerticalAlignment="Center"
                       Grid.Column="1"
                       />
            <Button Content="To Excel"
                    Click="ExportToExcel"
                    Width="100"
                    Margin="1" 
                    Grid.Column="2"/>
            <Button Content="Close"
                    Width="100"
                    Margin="1"
                    HorizontalAlignment="Right"
                    Command="{Binding CloseUpdatesDataGridCommand}"
                    Grid.Column="3"/>
        </Grid>

        <DataGrid x:Name="MainContainerDataTable"
                  ItemsSource="{Binding UnitsPlanView}"
                  SelectedItem="{Binding SelectedUnit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  IsReadOnly="True"
                 
                  FrozenColumnCount="0"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.IsDeferredScrollingEnabled="False"                 

                  VirtualizingPanel.ScrollUnit="Item"
                  VirtualizingPanel.VirtualizationMode="Recycling"
                  
                  Background="{StaticResource Brush.ContainerTable.Background}"

                  Style="{StaticResource MainDataGridCommonStyle}"
                  
                  Sorting="MainDataTable_Sorting"
                  ap:SelectingContainerDataGridItem.SelectingItem="{Binding SelectedUnit}"
                  PreviewKeyDown="MainDataTable_PreviewKeyDown"
                  behaviors:DataGridBehavior.DisplayRowNumber="True" 
                  ap:DataGridSortBehavior.AllowCustomSort="True">

            <DataGrid.Resources>

                <!-- Context menu -->
                <ContextMenu x:Key="DataGridColumnHeaderContextMenu"
                       Style="{StaticResource DataGridColumnHeadersContextMenu}"/>

                <!-- Header style -->
                <Style TargetType="{x:Type DataGridColumnHeader}"
                            BasedOn="{StaticResource DataGridColumnHeaderStyle}">
                    <Setter Property="ContextMenu"
                        Value="{StaticResource DataGridColumnHeaderContextMenu}" />
                </Style>

                <!-- Cell style -->
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="IsTabStop"
                                Value="False" />
                </Style>

                <!-- TextBox style-->
                <Style TargetType="{x:Type TextBox}">
                    <!--<Setter Property="IsTabStop"
                                    Value="True" />-->
                    <Setter Property="Margin"
                                Value="50" />
                    <Setter Property="TextAlignment"
                                Value="Right" />
                    <Setter Property="IsReadOnly"
                            Value="True"/>
                </Style>

                <!-- CheckBox style -->
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="IsEnabled" Value="False"/>
                </Style>

                <!-- Selection color -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="{StaticResource Color.DgTable.HighlightRow}" />

            </DataGrid.Resources>


            <!-- Columns -->
            <DataGrid.Columns>

                <!-- LOCATION -->
                <DataGridTextColumn x:Name="positionColumn"
                                    Binding="{Binding Location, UpdateSourceTrigger=LostFocus}"
                                    Header="Position"
                                    CanUserSort="True"
                                    SortMemberPath="LocationSortable">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <!--<Setter Property="TextBox.TextAlignment"
                                            Value="Right"/>
                            <Setter Property="TextBox.Margin"
                                    Value="5"></Setter>-->
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- CONTAINER NUMBER -->
                <DataGridTextColumn x:Name="numberColumn"
                                    Binding="{Binding DisplayContainerNumber, UpdateSourceTrigger=LostFocus}"
                                    Header="Container number"
                                    MinWidth="100" />

                <!-- Carrier -->
                <DataGridTextColumn x:Name="carrierColumn"
                                    Binding="{Binding Carrier, UpdateSourceTrigger=LostFocus}"
                                    Header="Operator" />

                <!-- POL -->
                <DataGridTextColumn x:Name="polColumn"
                                    Binding="{Binding POL, UpdateSourceTrigger=LostFocus}"
                                    Header="POL" />

                <!-- POD -->
                <DataGridTextColumn x:Name="podColumn"
                                    Binding="{Binding POD, UpdateSourceTrigger=LostFocus}"
                                    Header="POD" />

                <!-- Final destination -->
                <DataGridTextColumn x:Name="finalDestinationColumn"
                                    Binding="{Binding FinalDestination, UpdateSourceTrigger=LostFocus}"
                                    Header="Final destination" 
                                    ap:DataGridSortBehavior.CustomSorter="{StaticResource EmptyTextLastSorter}"
                                    />

                <!-- Contains Dg cargo -->
                <DataGridTemplateColumn x:Name="containsDgColumn"
                                        Header="Contains Dg cargo"
                                        CanUserSort="True"
                                        SortMemberPath="ContainsDgCargo"
                                        IsReadOnly="True">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=ContainsDgCargo, Mode=OneWay}"
                                      IsEnabled="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Type -->
                <DataGridTextColumn x:Name="containerTypeColumn"
                                    Binding="{Binding ContainerType}"
                                    Header="Container type">
                </DataGridTextColumn>

                <!-- isOPEN -->
                <DataGridTemplateColumn x:Name="openColumn"
                                        Header="Open type"
                                        CanUserSort="True"
                                        SortMemberPath="IsOpen">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=IsOpen, Mode=OneWay}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- isRf -->
                <DataGridTemplateColumn x:Name="rfColumn"
                                        Header="Is reefer"
                                        CanUserSort="True"
                                        SortMemberPath="IsRf">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=IsRf, Mode=OneWay}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- CargoHoldNumber -->
                <DataGridTextColumn x:Name="cargoHoldColumn"
                                    Binding="{Binding HoldNr, Mode=OneWay}"
                                    IsReadOnly="True"
                                    Header="Hold number">
                </DataGridTextColumn>

                <!-- HasLocationChanged -->
                <DataGridTemplateColumn x:Name="locationChangedColumn"
                                        Header="Location changed"
                                        IsReadOnly="True"
                                        CanUserSort="True"
                                        SortMemberPath="HasLocationChanged">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=HasLocationChanged, Mode=OneWay}"
                                      IsEnabled="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Location before restow -->
                <DataGridTextColumn x:Name="positionBeforeRestowColumn"
                                    Binding="{Binding LocationBeforeRestow, Mode=OneWay}"
                                    Header="Old Position"
                                    IsReadOnly="True"
                                    ap:DataGridSortBehavior.CustomSorter="{StaticResource EmptyTextLastSorter}">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping"
                                    Value="NoWrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- HasPodChanged -->
                <DataGridTemplateColumn x:Name="hasPodChangedColumn"
                                        Header="POD changed"
                                        CanUserSort="True"
                                        SortMemberPath="HasPodChanged"
                                        IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=HasPodChanged, Mode=OneWay}"
                                      IsEnabled="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- HasContainerTypeChanged -->
                <DataGridTemplateColumn x:Name="hasContainerTypeChangedColumn"
                                        Header="Type changed"
                                        IsReadOnly="True"
                                        CanUserSort="True"
                                        SortMemberPath="HasContainerTypeChanged">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding HasContainerTypeChanged, Mode=OneWay}" 
                                      IsEnabled="False"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


            </DataGrid.Columns>


            <!-- BEHAVIORS -->
            <behavior:Interaction.Triggers>
                <behavior:EventTrigger EventName="SelectionChanged">
                    <behavior:InvokeCommandAction Command="{Binding SelectionChangedCommand}" 
                                                  CommandParameter="{Binding ElementName=MainContainerDataTable, Path=SelectedItems}"/>
                </behavior:EventTrigger>
            </behavior:Interaction.Triggers>

        </DataGrid>
    </DockPanel>
</local:CommonDataGridUserControl>
