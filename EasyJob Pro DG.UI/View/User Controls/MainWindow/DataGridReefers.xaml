<UserControl x:Class="EasyJob_ProDG.UI.View.User_Controls.DataGridReefers"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:EasyJob_ProDG.UI.View.User_Controls"
             xmlns:ap="clr-namespace:EasyJob_ProDG.UI.View.AttachedProperties" 
             xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:EasyJob_ProDG.UI.Behaviors"
             xmlns:converters="clr-namespace:EasyJob_ProDG.UI.View.Converters" xmlns:cc="clr-namespace:CustomControlLib;assembly=CustomControlLib" xmlns:sort="clr-namespace:EasyJob_ProDG.UI.View.Sort"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">

    <UserControl.Resources>
        <converters:VisibilityToInverseBooleanConverter x:Key="VisibilityToInverseBooleanConverter" />
        <converters:BoolInversionConverter x:Key="BoolInversionConverter" />
        <sort:EmptyTextLastSortComparer x:Key="EmptyTextLastSorter" />
    </UserControl.Resources>

    <DockPanel>
        <StackPanel DockPanel.Dock="Top">
            <cc:SearchBox Text="{Binding TextToFilter}"/>
        </StackPanel>

        <Grid DockPanel.Dock="Bottom"
                    HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition />
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="110"/>
            </Grid.ColumnDefinitions>
            <Label Name="lblSelectionStatus"
                   Content="Selected: "
                   HorizontalAlignment="Right"
                   />
            <TextBlock Text="{Binding StatusBarText, Mode=OneWay}"
                       HorizontalAlignment="Stretch"
                       TextAlignment="Left"
                       VerticalAlignment="Center"
                       Grid.Column="1"
                       />
            <Button Content="Add"
                    Command="{Binding DisplayAddUnitMenuCommand}"
                    Width="100"
                    Margin="1" 
                    Grid.Column="2"/>
            <Button Content="To Excel"
                    Click="ExportToExcel"
                    Width="100"
                    Margin="1" 
                    Grid.Column="3"/>
        </Grid>

        <!-- Add reefer -->
        <local:AddContainerToDataGrid 
            Title="Add Reefer container |"
            IsAddDg="False"
            Visibility="{Binding MenuVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ContainerNumber="{Binding UnitToAddNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Location="{Binding UnitToAddLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            CanUserAdd="{Binding CanUserAddUnit, UpdateSourceTrigger=PropertyChanged}"
            DockPanel.Dock="Bottom">
            <behavior:Interaction.Triggers>
                <behavior:EventTrigger EventName="AddItem">
                    <behavior:InvokeCommandAction Command="{Binding AddNewUnitCommand}"/>
                </behavior:EventTrigger>
            </behavior:Interaction.Triggers>
        </local:AddContainerToDataGrid>

        <DataGrid x:Name="MainReeferDataTable"
                  ItemsSource="{Binding UnitsPlanView}"
                  SelectedItem="{Binding SelectedUnit, Mode=TwoWay}"
                  IsSynchronizedWithCurrentItem="True"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserSortColumns="True"
                  
                  FrozenColumnCount="0"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.IsDeferredScrollingEnabled="False"
                  EnableRowVirtualization="True"
                  VirtualizingPanel.IsContainerVirtualizable="True"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.VirtualizationMode="Recycling"
                  VirtualizingPanel.ScrollUnit="Item"
                  
                  HeadersVisibility="All"
                  AlternationCount="2"
                  GridLinesVisibility="None"
                  Background="{StaticResource Brush.ReeferTable.Background}"
                  RowBackground="Transparent"
                  AlternatingRowBackground="{StaticResource Brush.DgTable.AlternateRow}"
                  Opacity="1"
                  Grid.Column="0"
                  Grid.Row="0"
                  SelectionMode="Extended"
                  ap:SelectingContainerDataGridItem.SelectingItem="{Binding SelectedUnit}"
                  behaviors:DataGridBehavior.DisplayRowNumber="True"
                  ap:DataGridSortBehavior.AllowCustomSort="True"
                  PreviewKeyDown="MainReeferDataTable_PreviewKeyDown"
                  UnloadingRow="MainReeferDataTable_UnloadingRow"
                  Sorting="MainContainerDataTable_Sorting"
                  >

            <DataGrid.Resources>

                <ContextMenu x:Key="DataGridReefersColumnHeaderContextMenu"
                             DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}"
                             ItemsSource="{Binding Columns, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}">
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header"
                                    Value="{Binding Header}" />
                            <Setter Property="AutomationProperties.Name"
                                    Value="{Binding Header}" />
                            <Setter Property="IsCheckable"
                                    Value="True" />
                            <Setter Property="IsChecked"
                                    Value="{Binding Visibility, Mode=TwoWay, Converter={StaticResource VisibilityToInverseBooleanConverter}}" />
                            <Style.Triggers>
                                <Trigger Property="Header"
                                         Value="N">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>

                <!-- Header style -->
                <Style TargetType="{x:Type DataGridColumnHeader}"
                       BasedOn="{StaticResource DataGridColumnHeaderStyle}">
                    <Setter Property="ContextMenu"
                            Value="{StaticResource DataGridReefersColumnHeaderContextMenu}" />
                </Style>

                <!-- CheckBox style -->
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>
                
                <!-- Cell style -->
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="TextBlock.TextAlignment" Value="Right"/>
                    <Setter Property="Padding" Value="10,1"/>
                </Style>                
                

                <!-- Selection color -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="{StaticResource Color.DgTable.HighlightRow}" />

            </DataGrid.Resources>

            <!-- Columns -->
            <DataGrid.Columns>

                <!-- LOCATION -->
                <DataGridTextColumn x:Name="positionColumn"
                                    Binding="{Binding Location, UpdateSourceTrigger=LostFocus}"
                                    Header="Position"
                                    SortMemberPath="LocationSortable">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <!--<Setter Property="TextBox.TextAlignment"
                                            Value="Right"/>
                            <Setter Property="TextBox.Margin"
                                    Value="5"></Setter>-->
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- Is under deck -->
                <DataGridTemplateColumn x:Name="isUnderdeckColumn"
                                        Header="Is under deck"
                                        SortMemberPath="IsUnderdeck"
                                        IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=IsUnderdeck, Mode=OneWay}"
                                      IsEnabled="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- CONTAINER NUMBER -->
                <DataGridTextColumn x:Name="numberColumn"
                                    Binding="{Binding DisplayContainerNumber, UpdateSourceTrigger=LostFocus}"
                                    Header="Container number"
                                    MinWidth="100" />

                <!-- Carrier -->
                <DataGridTextColumn x:Name="carrierColumn"
                                    Binding="{Binding Carrier, UpdateSourceTrigger=LostFocus}"
                                    Header="Operator" />

                <!-- POL -->
                <DataGridTextColumn x:Name="polColumn"
                                    Binding="{Binding POL, UpdateSourceTrigger=LostFocus}"
                                    Header="POL" />

                <!-- POD -->
                <DataGridTextColumn x:Name="podColumn"
                                    Binding="{Binding POD, UpdateSourceTrigger=LostFocus}"
                                    Header="POD" />

                <!-- Final destination -->
                <DataGridTextColumn x:Name="finalDestinationColumn"
                                    Binding="{Binding FinalDestination, UpdateSourceTrigger=LostFocus}"
                                    Header="Final destination" 
                                    ap:DataGridSortBehavior.CustomSorter="{StaticResource EmptyTextLastSorter}"/>

                <!-- Contains Dg cargo -->
                <DataGridTemplateColumn x:Name="containsDgColumn"
                                        Header="Contains Dg cargo"
                                        SortMemberPath="ContainsDgCargo"
                                        IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=ContainsDgCargo, Mode=OneWay}"
                                      IsEnabled="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Set point -->
                <DataGridTextColumn x:Name="setPointColumn"
                                    Binding="{Binding SetTemperature, UpdateSourceTrigger=LostFocus, StringFormat=0.0}"
                                    Header="Set point" />

                <!-- Commodity -->
                <DataGridTextColumn x:Name="commodtyColumn"
                                    Header="Commodity"
                                    FocusManager.FocusedElement="{Binding ElementName=txbName}"
                                    Binding="{Binding Commodity, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                    ap:DataGridSortBehavior.CustomSorter="{StaticResource EmptyTextLastSorter}">

                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBox.TextWrapping"
                                    Value="WrapWithOverflow" />
                            <Setter Property="TextBox.MaxLines"
                                    Value="2" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style>
                            <Setter Property="TextBox.TextWrapping"
                                    Value="WrapWithOverflow" />
                            <Setter Property="TextBox.MaxLines"
                                    Value="3" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>

                <!-- Vent setting -->
                <DataGridTextColumn x:Name="ventColumn"
                                    Header="Vent"
                                    FocusManager.FocusedElement="{Binding ElementName=txbName}"
                                    Binding="{Binding VentSetting, UpdateSourceTrigger=LostFocus}"
                                    ap:DataGridSortBehavior.CustomSorter="{StaticResource EmptyTextLastSorter}">

                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBox.TextWrapping"
                                    Value="WrapWithOverflow" />
                            <Setter Property="TextBox.MaxLines"
                                    Value="2" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style>
                            <Setter Property="TextBox.TextWrapping"
                                    Value="WrapWithOverflow" />
                            <Setter Property="TextBox.MaxLines"
                                    Value="3" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>

                <!-- Load temperature -->
                <DataGridTextColumn x:Name="loadTempColumn"
                                    Binding="{Binding LoadTemperature, UpdateSourceTrigger=LostFocus}"
                                    Header="Load temperature" />

                <!-- Reefer special -->
                <DataGridTextColumn x:Name="reeferSpecialColumn"
                                    Header="Special"
                                    FocusManager.FocusedElement="{Binding ElementName=txbName}"
                                    Binding="{Binding ReeferSpecial, UpdateSourceTrigger=LostFocus}"
                                    ap:DataGridSortBehavior.CustomSorter="{StaticResource EmptyTextLastSorter}">

                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBox.TextWrapping"
                                    Value="WrapWithOverflow" />
                            <Setter Property="TextBox.MaxLines"
                                    Value="2" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style>
                            <Setter Property="TextBox.TextWrapping"
                                    Value="WrapWithOverflow" />
                            <Setter Property="TextBox.MaxLines"
                                    Value="3" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>

                <!-- Reefer remark -->
                <DataGridTextColumn x:Name="remarkColumn"
                                    Header="Remark"
                                    FocusManager.FocusedElement="{Binding ElementName=txbName}"
                                    Binding="{Binding ReeferRemark, UpdateSourceTrigger=LostFocus}"
                                    ap:DataGridSortBehavior.CustomSorter="{StaticResource EmptyTextLastSorter}">

                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBox.TextWrapping"
                                    Value="WrapWithOverflow" />
                            <Setter Property="TextBox.MaxLines"
                                    Value="2" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style>
                            <Setter Property="TextBox.TextWrapping"
                                    Value="WrapWithOverflow" />
                            <Setter Property="TextBox.MaxLines"
                                    Value="3" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>

                <!-- isLocked -->
                <DataGridTemplateColumn x:Name="isLockedColumn"
                                        Header="Is Locked"
                                        SortMemberPath="IsPositionLockedForChange">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox 
                                IsChecked="{Binding Path=IsPositionLockedForChange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                IsEnabled="{Binding Path=HasNoNumber, Converter={StaticResource BoolInversionConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- isToImport -->
                <DataGridTemplateColumn x:Name="isToImport"
                                        Header="Import"
                                        SortMemberPath="IsToImport">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox 
                                IsChecked="{Binding Path=IsToImport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                IsEnabled="{Binding Path=HasNoNumber, Converter={StaticResource BoolInversionConverter}, UpdateSourceTrigger=PropertyChanged}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- isNotToImport -->
                <DataGridTemplateColumn x:Name="isNotToImport"
                                        Header="Not to import"
                                        SortMemberPath="IsNotToImport">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox 
                                IsChecked="{Binding Path=IsNotToImport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                IsEnabled="{Binding Path=HasNoNumber, Converter={StaticResource BoolInversionConverter}, UpdateSourceTrigger=PropertyChanged}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- isToBeKeptInPlan -->
                <DataGridTemplateColumn x:Name="isToBeKept"
                                        Header="To be kept in plan"
                                        SortMemberPath="IsToBeKeptInPlan">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox 
                                IsChecked="{Binding Path=IsToBeKeptInPlan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding Path=HasNoNumber, Converter={StaticResource BoolInversionConverter}, UpdateSourceTrigger=PropertyChanged}"
                                />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- HasUpdated -->
                <DataGridTemplateColumn x:Name="HasUpdatedColumn"
                                        Header="Has updated"
                                        IsReadOnly="True"
                                        SortMemberPath="HasUpdated">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=HasUpdated, Mode=OneWay}"
                                      IsEnabled="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- HasLocationChanged -->
                <DataGridTemplateColumn x:Name="locationChangedColumn"
                                        Header="Location changed"
                                        IsReadOnly="True"
                                        SortMemberPath="HasLocationChanged">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=HasLocationChanged, Mode=OneWay}"
                                      IsEnabled="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Location before restow -->
                <DataGridTextColumn x:Name="positionBeforeRestowColumn"
                                    Binding="{Binding LocationBeforeRestow, Mode=OneWay}"
                                    Header="Old Position"
                                    IsReadOnly="True"
                                    ap:DataGridSortBehavior.CustomSorter="{StaticResource EmptyTextLastSorter}">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping"
                                    Value="NoWrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- isNewUnitInPlan -->
                <DataGridTemplateColumn x:Name="newUnitColumn"
                                        Header="Is New in plan"
                                        IsReadOnly="True"
                                        SortMemberPath="IsNewUnitInPlan">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=IsNewUnitInPlan, Mode=OneWay}"
                                      IsEnabled="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- HasPodChanged -->
                <DataGridTemplateColumn x:Name="hasPodChangedColumn"
                                        Header="POD changed"
                                        SortMemberPath="HasPodChanged"
                                        IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=HasPodChanged, Mode=OneWay}"
                                      IsEnabled="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- HasContainerTypeChanged -->
                <DataGridTemplateColumn x:Name="hasContainerTypeChangedColumn"
                                        Header="Type changed"
                                        IsReadOnly="True"
                                        SortMemberPath="HasContainerTypeChanged">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding HasContainerTypeChanged, Mode=OneWay}" 
                                      IsEnabled="False"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>

            <!-- BEHAVIORS -->
            <behavior:Interaction.Triggers>
                <behavior:EventTrigger EventName="SelectionChanged">
                    <behavior:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                  CommandParameter="{Binding ElementName=MainReeferDataTable, Path=SelectedItems}"/>
                </behavior:EventTrigger>
            </behavior:Interaction.Triggers>

            <!-- INPUT BINDINGS -->
            <DataGrid.InputBindings>
                <KeyBinding Key="Delete"
                            Command="{Binding DeleteUnitCommand}"
                            CommandParameter="{Binding ElementName=MainReeferDataTable, Path=SelectedItems}" />
            </DataGrid.InputBindings>
        </DataGrid>
    </DockPanel>
</UserControl>
