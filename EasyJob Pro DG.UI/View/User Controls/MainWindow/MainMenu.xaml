<local:AnimatedUserControl x:Class="EasyJob_ProDG.UI.View.User_Controls.MainMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:EasyJob_ProDG.UI.View.User_Controls" 
             mc:Ignorable="d"
             FontFamily="{StaticResource MenuFont}"
             FontSize="{StaticResource StandardMenuFontSize}"
             Foreground="{StaticResource Brush.MainMenu.TopMenuItem.Foreground}"
             >
    <UserControl.Resources>

        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="1" />
            <Setter Property="Margin" Value="28,4,5,4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderThickness="1" BorderBrush="{StaticResource Brush.MainMenu.Disabled.Foreground}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderThickness="1">
                            <StackPanel ClipToBounds="True"
                                Orientation="Horizontal"
                                IsItemsHost="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <Popup x:Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        AllowsTransparency="True"
                        Focusable="False"
                        PopupAnimation="Slide">
                        <Grid>
                        <Border x:Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            BorderThickness="1"
                            Background="{StaticResource Brush.MainMenu.Background}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Transparent" />
                            </Border.BorderBrush>
                            <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                                <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                            <Border VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="25" 
                                    Background="Transparent" BorderBrush="{StaticResource Brush.MainMenu.Disabled.Foreground}" 
                                    BorderThickness="0,0,1,0"/>
                        </Grid>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation"
                        Value="true">
                    <Setter TargetName="Popup"
                            Property="PopupAnimation"
                            Value="None" />
                </Trigger>
                <Trigger Property="IsHighlighted"
                        Value="true">
                    <Setter Property="TextBlock.Foreground"
                            TargetName="Border"
                            Value="{StaticResource Brush.MainMenu.TopLevel.Highlight.Foreground}">

                    </Setter>
                </Trigger>
                <Trigger SourceName="Popup"
                        Property="AllowsTransparency"
                        Value="True">
                    <Setter TargetName="SubmenuBorder"
                        Property="CornerRadius"
                        Value="0,0,4,4" />
                    <Setter TargetName="SubmenuBorder"
                            Property="Padding"
                            Value="0,0,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"
                        Value="False">
                    <Setter Property="Foreground" Value="{StaticResource Brush.MainMenu.Disabled.Foreground}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuItem -->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
          BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                          MinWidth="30"
                          SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                                          MinWidth="32"
                          SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                    <Border x:Name="Check"
                            Width="13"
                            Height="13"
                            Visibility="Collapsed"
                            Margin="6,0"
                            Background="Transparent"
                            BorderThickness="0"
                            BorderBrush="Gray">
                        <Path x:Name="CheckMark"
                              HorizontalAlignment="Left"
                              Width="9"
                              Height="9"
                              Visibility="Hidden"
                              SnapsToDevicePixels="False"
                              StrokeThickness="2"
                              Data="M 0, 3.5 L 3.5 7 L 7 -2" Stroke="{StaticResource Brush.MainMenu.TopMenuItem.Foreground}" />
                    </Border>
                    <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" 
                                      Margin="0,0,15,0"
                                      />
                    <TextBlock x:Name="InputGestureText"
                        Grid.Column="2"
                        Text="{TemplateBinding InputGestureText}"
                        Margin="5,2,2,2"
                        DockPanel.Dock="Right" 
                        Foreground="{StaticResource Brush.MainMenu.InputGesture.Foreground}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted"  Value="true">
                    <Setter Property="Background" TargetName="Border" 
                            Value="{StaticResource Brush.MainMenu.SubLevel.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="Border" 
                            Value="{StaticResource Brush.MainMenu.SubLevel.Highlight.Border}"/>
                    <Setter Property="TextBlock.Foreground" TargetName="Border" 
                            Value="{StaticResource Brush.MainMenu.SubLevel.Highlight.Foreground}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource Brush.MainMenu.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Control template for menu item with arrow-->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
                    BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                          MinWidth="30"
                          SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                    <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                                Grid.Column="2"
                                Text="{TemplateBinding InputGestureText}"
                                Margin="5,2,2,2"
                                DockPanel.Dock="Right" />
                    <Path Grid.Column="3"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 0 7 L 4 3.5 Z" 
                          Fill="{StaticResource Brush.MainMenu.TopMenuItem.Foreground}" />
                    <Popup x:Name="Popup"
                            Placement="Right"
                            HorizontalOffset="-4"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Fade">
                        <Grid>
                        <Border x:Name="SubmenuBorder"
                                SnapsToDevicePixels="True"
                                Background="{StaticResource Brush.MainMenu.Background}"
                                BorderThickness="1" 
                                BorderBrush="Transparent">
                            <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                                <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                            <Border VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="25" 
                                    Background="Transparent" BorderBrush="{StaticResource Brush.MainMenu.Disabled.Foreground}" 
                                    BorderThickness="0,0,1,0"/>
                        </Grid>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility"
                            Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                        <Setter Property="Background" TargetName="Border" 
                            Value="{StaticResource Brush.MainMenu.SubLevel.Highlight.Background}"/>
                        <Setter Property="BorderBrush" TargetName="Border" 
                            Value="{StaticResource Brush.MainMenu.SubLevel.Highlight.Border}"/>
                        <Setter Property="TextBlock.Foreground" TargetName="Border" 
                            Value="{StaticResource Brush.MainMenu.SubLevel.Highlight.Foreground}"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource Brush.MainMenu.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- MenuItem Style -->
        <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template" 
                            Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                    <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template"
                            Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template"
                            Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template"
                            Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </UserControl.Resources>

    <Grid>
        <Menu x:Name="MainAppMenu"
              Margin="4"
              HorizontalAlignment="Left"
              Height="auto"
              Width="auto">

            <!-- File -->
            <MenuItem Header="File">
                <MenuItem Header="New"
                          Command="{Binding NewCargoPlanCommand}" />
                <MenuItem Header="_Open"
                          Command="{Binding OpenFileCommand}"
                          InputGestureText="Ctrl+O"
                          ToolTip="Open new condition file, update existing or import dg and reefer info" />
                <MenuItem Header="_Save"
                          Command="{Binding SaveFileCommand}"
                          InputGestureText="Ctrl+S" />

                <Separator />
                <MenuItem Header="_Update condition"
                          Command="{Binding UpdateConditionCommand}"
                          InputGestureText="Ctrl+U"
                          ToolTip="Load only the changes in a new file" />
                <Separator />

                <MenuItem Header="Exit"
                          Command="{Binding CloseApplicationCommand}"
                          InputGestureText="Ctrl+Q" />
            </MenuItem>

            <!-- Dangerous cargo -->
            <MenuItem Header="Dangerous cargo">
                <MenuItem Header="_Recheck conflicts"
                          Command="{Binding ReCheckCommand}"
                          InputGestureText="F5"
                          ToolTip="Check condition and update list of conflicts" />
                <Separator/>
                <MenuItem Header="_Import info"
                          Command="{Binding ImportDataCommand}"
                          InputGestureText="Ctrl+I"
                          ToolTip="Import Dg and reefer info from the file" />
                <MenuItem Header="Import info (POL only)"
                          Command="{Binding ImportDataOnlyPolCommand}"
                          ToolTip="Import Dg and reefer info for current POL only" />
                <MenuItem Header="Import info (only selected)"
                          Command="{Binding ImportDataOnlySelectedCommand}"
                          ToolTip="Import Dg and reefer info for selected for import items only" />

                <Separator/>
                <MenuItem Header="Export to Excel"
                          Command="{Binding ExportToExcelCommand}" />
                <MenuItem Header="Edit excel template"
                          Command="{Binding OpenUserSettingsWindowCommand}"
                          CommandParameter="ExcelDg"/>

                <Separator/>

                <MenuItem Header="Actions">
                    <MenuItem Header="Include Technical Name"
                          IsCheckable="True"
                          IsChecked="{Binding DataGridDgViewModel.IsTechnicalNameIncluded, Mode=OneWay}"
                          Command="{Binding DataGridDgViewModel.IncludeTechnicalNameCommand}">

                    </MenuItem>
                    <MenuItem Header="Add"
                              Command="{Binding AddNewDgCommand}" />
                </MenuItem>
            </MenuItem>

            <!-- Reefers -->
            <MenuItem Header="Reefers">
                <MenuItem Header="Import manifest info"
                      Command="{Binding ImportReeferManifestInfoCommand}"/>
                <MenuItem Header="Import manifest info only selected"
                      Command="{Binding ImportReeferManifestInfoOnlySelectedCommand}"/>
                <MenuItem Header="Import manifest info only current POL"
                      Command="{Binding ImportReeferManifestInfoOnlyPolCommand}"/>
                <Separator/>
                <MenuItem Header="Edit manifest template"
                          Command="{Binding OpenUserSettingsWindowCommand}"
                          CommandParameter="ExcelReefers"/>
            </MenuItem>

            <!-- Summary -->
            <MenuItem Header="Summary">
                <MenuItem Header="Cargo summary"
                      Command="{Binding ShowCargoSummaryCommand}"/>
                <MenuItem Header="Port to port summary"
                      Command="{Binding ShowPortToPortReportCommand}"/>
                <MenuItem Header="IMDG summary"
                          Command="{Binding ShowDgCargoSummaryCommand}"/>
            </MenuItem>

            <!-- Settings -->
            <MenuItem Header="Settings">
                <MenuItem Header="Edit Ship Profile"
                          Command="{Binding OpenShipProfileWindowCommand}" />
                <MenuItem Header="User settings"
                          Command="{Binding OpenUserSettingsWindowCommand}" />
                <Separator/>
                <MenuItem Header="Save settings"
                          Command="{Binding SaveSettingsCommand}" />
                <MenuItem Header="Restore settings"
                          Command="{Binding RestoreSettingsCommand}" />
            </MenuItem>

            <!-- Help -->
            <MenuItem Header="Help">
                <MenuItem Header="License"
                          Command="{Binding ShowLicenseDialogCommand}"></MenuItem>
                <MenuItem Header="About"
                          Command="{Binding ShowAboutCommand}"></MenuItem>
                <!--<MenuItem Header="Login"
                          Command="{Binding ShowLoginWindowCommand}"></MenuItem>-->
            </MenuItem>
            
        </Menu>
    </Grid>
</local:AnimatedUserControl>
