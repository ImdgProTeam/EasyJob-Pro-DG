<UserControl x:Class="EasyJob_ProDG.UI.View.User_Controls.ConflictsListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:viewmodel="clr-namespace:EasyJob_ProDG.UI.ViewModel"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300"
             DataContext="{Binding Source={StaticResource ViewModelLocator}, Path=ConflictListViewModel}"
             d:DataContext="{d:DesignInstance viewmodel:ConflictListViewModel, d:IsDesignTimeCreatable=True}">

    <UserControl.Resources>
        <CollectionViewSource x:Key="ConflictsView"
                              Source="{Binding Path=Conflicts}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="ConflictGroupTitle" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

    </UserControl.Resources>

    <Grid x:Name="mainConflictListGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>


        <ListBox x:Name="ConflictBox"
                 ItemsSource="{Binding Source={StaticResource ConflictsView}, UpdateSourceTrigger=PropertyChanged}"
                 SelectedItem="{Binding SelectedConflict}"
                 IsSynchronizedWithCurrentItem="True"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                 VirtualizingPanel.IsContainerVirtualizable="True"
                 VirtualizingPanel.IsVirtualizing="True"
                 VirtualizingPanel.VirtualizationMode="Standard"
                 VirtualizingPanel.ScrollUnit="Pixel"
                 HorizontalContentAlignment="Stretch"
                 Margin="0,0,2,0"
                 Padding="2"
                 Grid.Row="1"
                 Background="{StaticResource Brush.Background.Main}">

            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="False"
                                                  Background="{StaticResource Brush.Background.Expander}"
                                                  Style="{StaticResource expandTitleTrigger}"
                                                  MouseEnter="Expander_MouseEnter"
                                                  MouseLeave="Expander_MouseLeave">

                                            <Expander.Header>
                                                <StackPanel x:Name="stpHeader"
                                                            Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Name}"></TextBlock>
                                                    <TextBlock Text=" ("></TextBlock>
                                                    <TextBlock Text="{Binding ItemCount}"></TextBlock>
                                                    <TextBlock Text=")"></TextBlock>
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListBox.GroupStyle>

            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Padding="2" BorderBrush="Transparent" BorderThickness="0" SnapsToDevicePixels="True">
                                    <ContentPresenter/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border CornerRadius="2" Padding="5" Margin="-1, 3, 0, 0">
                        <Border.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="{StaticResource Brush.ConflictList.Items.Background}"/>
                                <Setter Property="BorderThickness" Value="0.5"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Brush.ConflictItem.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource Brush.ConflictItem.MouseOver.Border}"/>
                                        <Setter Property="BorderThickness" Value="0.5"/>
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource Brush.ConflictItem.MouseOver.Foreground}"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, 
                                        Path=IsSelected}"  Value="True">
                                        <Setter Property="Background" Value="{StaticResource Brush.ConflictItem.Selected.Background}"/>
                                        <Setter Property="TextBox.Foreground" Value="{StaticResource Brush.ConflictItem.Selected.Foreground}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>

                        </Border.Resources>
                        
                        <DockPanel Height="NaN">
                            
                            <CheckBox IsChecked="False"
                                  HorizontalAlignment="Left"
                                  Margin="4,4,0,0"
                                  DockPanel.Dock="Right"
                                  VerticalAlignment="Top">
                                <CheckBox.Template>
                                    <ControlTemplate>
                                        <Ellipse x:Name="CheckedConflictEllipse"
                                             Height="10"
                                             Width="10"
                                             Fill="Red"
                                             MouseDown="Ellipse_MouseDown">
                                        </Ellipse>
                                    </ControlTemplate>
                                </CheckBox.Template>
                            </CheckBox>

                            <TextBlock
                                    DockPanel.Dock="Top"
                                    Text="{Binding ContainerNumber, UpdateSourceTrigger=PropertyChanged}"
                                    MouseDown="HeaderTextBlock_MouseDown"
                                    Margin="2">
                                <TextBlock.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Setters>
                                            <Setter Property="TextElement.Foreground" Value="{StaticResource Brush.ConflictItem.ContainerNumber.Foreground}"/>
                                        </Style.Setters>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, 
                                            Path=IsMouseOver}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource Brush.ConflictItem.ContainerNumber.MouseOver.Foreground}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, 
                                            Path=IsSelected}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource Brush.ConflictItem.ContainerNumber.Selected.Foreground}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Resources>
                            </TextBlock>

                            <TextBox  DockPanel.Dock="Bottom"
                                    Padding="5,5,10,5"
                                  IsReadOnly="True"
                                  Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}">
                                <TextBox.Resources>
                                    <Style TargetType="TextBox">
                                        <Setter Property="TextAlignment" Value="Justify" />
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                        <Setter Property="Focusable" Value="True"/>
                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}},
                                            Path=IsMouseOver}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource Brush.ConflictItem.ContainerNumber.MouseOver.Foreground}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, 
                                            Path=IsSelected}" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource Brush.ConflictItem.ContainerNumber.Selected.Foreground}"/>
                                                <Setter Property="IsHitTestVisible" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Resources>
                            </TextBox>

                        </DockPanel>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding DoubleClickOnSelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListBox>

    </Grid>
</UserControl>
